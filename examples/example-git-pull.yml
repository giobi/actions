---
# Example usage of the generic git-pull reusable workflow
# Place this in your repository's .github/workflows/ directory

name: Deploy via Generic Git Pull

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: environment
      branch:
        description: "Branch to deploy"
        required: false
        default: "main"
        type: string
      run_post_commands:
        description: "Run post-pull commands"
        required: false
        default: false
        type: boolean
      custom_commands:
        description: "Custom commands to run after git pull (one per line)"
        required: false
        default: ""
        type: string

jobs:
  # Basic usage - just git pull
  deploy-basic:
    uses: giobi/actions/.github/workflows/git-pull.yml@main
    with:
      branch: ${{ github.event.inputs.branch }}
      environment: ${{ github.event.inputs.environment }}
    secrets:
      SSHPRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
      USERHOST: ${{ secrets.USERHOST }}
      SSHPUBLIC: ${{ secrets.SSH_PUBLIC_KEY }}

  # Advanced usage - with custom post commands
  deploy-with-commands:
    uses: giobi/actions/.github/workflows/git-pull.yml@main
    with:
      branch: ${{ github.event.inputs.branch }}
      run_post_commands: ${{ github.event.inputs.run_post_commands == 'true' }}
      post_commands: |
        npm install --production
        npm run build
        pm2 restart app
        echo "Deployment completed at $(date)"
      environment: ${{ github.event.inputs.environment }}
    secrets:
      SSHPRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
      USERHOST: ${{ secrets.USERHOST }}
      SSHPUBLIC: ${{ secrets.SSH_PUBLIC_KEY }}

  # Example for Python/Django projects
  deploy-python:
    uses: giobi/actions/.github/workflows/git-pull.yml@main
    with:
      branch: ${{ github.event.inputs.branch }}
      run_post_commands: true
      post_commands: |
        source venv/bin/activate
        pip install -r requirements.txt
        python manage.py migrate
        python manage.py collectstatic --noinput
        sudo systemctl restart gunicorn
      environment: ${{ github.event.inputs.environment }}
    secrets:
      SSHPRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
      USERHOST: ${{ secrets.USERHOST }}

  # Example for Go projects
  deploy-go:
    uses: giobi/actions/.github/workflows/git-pull.yml@main
    with:
      branch: ${{ github.event.inputs.branch }}
      run_post_commands: true
      post_commands: |
        go mod tidy
        go build -o app
        sudo systemctl restart myapp
      environment: ${{ github.event.inputs.environment }}
    secrets:
      SSHPRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
      USERHOST: ${{ secrets.USERHOST }}

  # Example with custom USERHOST formats
  deploy-with-custom-port:
    uses: giobi/actions/.github/workflows/git-pull.yml@main
    with:
      branch: ${{ github.event.inputs.branch }}
      environment: ${{ github.event.inputs.environment }}
    secrets:
      SSHPRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
      # USERHOST examples:
      # Basic: user@server.com
      # With port: user@server.com:2222
      # With path: user@server.com/home/user/myproject
      # Full: user@server.com:2222/home/user/myproject
      USERHOST: ${{ secrets.USERHOST }}