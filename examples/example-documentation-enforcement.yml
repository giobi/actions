name: Documentation Enforcement Example

on:
  # Run weekly to check for new features that need documentation
  schedule:
    - cron: '0 9 * * 1'  # Monday at 9 AM UTC
  
  # Run manually with custom parameters
  workflow_dispatch:
    inputs:
      days:
        description: "Number of days to look back for closed issues"
        required: false
        default: "14"
        type: string
      target_docs:
        description: "Documentation files to target (comma-separated)"
        required: false
        default: "readme.md,docs/,help/"
        type: string
      dry_run:
        description: "Run in dry-run mode without creating issues"
        required: false
        default: false
        type: boolean

jobs:
  enforce-documentation:
    uses: giobi/actions/.github/workflows/documentation-enforcement.yml@main
    with:
      days: ${{ github.event.inputs.days || 14 }}
      target_docs: ${{ github.event.inputs.target_docs || 'readme.md,docs/,help/' }}
      dry_run: ${{ github.event.inputs.dry_run || false }}
    secrets:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

  report-results:
    needs: enforce-documentation
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Report Documentation Enforcement Results
        run: |
          echo "üìä Documentation Enforcement Results:"
          echo "Issues Analyzed: ${{ needs.enforce-documentation.outputs.issues_analyzed }}"
          echo "Features Found: ${{ needs.enforce-documentation.outputs.features_found }}"
          echo "Documentation Issue Created: ${{ needs.enforce-documentation.outputs.documentation_issue_created }}"
          echo "Documentation Issue Number: ${{ needs.enforce-documentation.outputs.documentation_issue_number }}"
          
          if [ "${{ needs.enforce-documentation.outputs.documentation_issue_created }}" == "true" ]; then
            echo "üéâ Documentation update issue created successfully!"
            echo "Check issue #${{ needs.enforce-documentation.outputs.documentation_issue_number }} for details."
          elif [ "${{ needs.enforce-documentation.outputs.features_found }}" == "0" ]; then
            echo "‚úÖ No feature implementations found - documentation is up to date!"
          else
            echo "‚ÑπÔ∏è No documentation issue created (likely running in dry-run mode)."
          fi